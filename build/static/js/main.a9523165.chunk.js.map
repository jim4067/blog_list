{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","components/BlogForm.js","components/Blog.js","components/DisplayBlogs.js","components/Users.js","components/DisplayUsers.js","components/LoginForm.js","components/Navigation.js","components/Notification.js","components/SingleBlog.js","components/SingleUser.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","services/login.js","App.js","store.js","index.js"],"names":["timeoutID","token","setToken","newToken","getAll","a","axios","get","response","console","log","data","create","blogObject","config","headers","Authorization","post","update","id","put","remove","delete","sortBlogs","blogs","sort","b","likes","likeBlog","dispatch","blogService","allBlogs","blogToLike","find","blog","likedBlog","updatedBlog","type","blogReducer","state","action","blogsToSort","map","showNotification","message","time","setTimeout","clearTimeout","hideNotification","notificationReducer","Wrapper","styled","div","FormWrapper","props","invisible","Input","input","VisibilityButton","button","SubmitButton","BlogForm","useDispatch","useState","setinVisible","onSubmit","event","preventDefault","title","target","value","author","url","addedBlog","newBlog","placeholder","name","onClick","StyledNameLink","Link","StyledButton","StyledRemove","Blog","increaseLikesOf","handleRemOf","visible","setVisible","hideByDefault","style","to","className","StyledHeading","h2","DisplayBlogs","useSelector","window","confirm","afterDeletion","filter","key","children","Users","users","padding","length","DisplayUsers","user","LoginForm","handleLogin","username","setUsername","password","setPassword","onChange","nav","NavBar1","section","NavBar2","StyledLink","LogOutButton","Navigation","handleLogout","wrong_login_styles","blog_addition_styles","Notification","notification","includes","StyledParagraph","p","SingleBlog","match","useRouteMatch","singleBlog","params","href","StyledList","li","User","singleUser","textAlign","loggedUser","userReducer","getUsers","usersReducer","login","credentials","App","useEffect","userService","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","clear","location","reload","exception","path","SingleUser","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9523165.chunk.js","sourcesContent":["const notificationReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'SET NOTIFICATION':\n            return state = action.data;\n        case 'CLEAR NOTIFICATION':\n            return state = action.data;\n        default:\n            return state;\n    }\n}\n\n//for clearing the setTimout method;\n//for async actions use redux-thunk\nlet timeoutID;\n\nexport const showNotification = (message, time) => {\n    return async dispatch => {\n        dispatch({\n            type: 'SET NOTIFICATION',\n            data: message\n        });\n\n        setTimeout(() => {//find out why async setTimeout does not work\n            if (timeoutID) {\n                clearTimeout(timeoutID);\n            }\n\n            timeoutID = setTimeout(() => {\n                dispatch(hideNotification());\n            }, time);\n\n        }, time * 1000);\n    }\n}\n\n\nexport const hideNotification = () => {\n    return ({\n        type: 'CLEAR NOTIFICATION',\n        data: null\n    });\n}\n\nexport default notificationReducer;\n\n//the showNotification func will be the one to handle showing and removing the notification\n//which will be dispatched in the app component","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n\n  console.log(response.data);\n  return response.data;\n}\n\nconst create = async (blogObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, blogObject, config);\n  return response.data;\n}\n\nconst update = async (id, blogObject) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}/${id}`, blogObject, config);\n  return response.data;\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n}\n\nexport default { setToken, getAll, create, update, remove }","import blogService from '../services/blogs';\n\n//function to sort the blogs\nconst sortBlogs = (blogs) => {\n    return blogs.sort((a, b) => b.likes - a.likes);\n}\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT BLOGS':\n            return sortBlogs(action.data);\n        case 'NEW BLOG':\n            return [...state, action.data];\n        case 'VOTE': {\n            const likedBlog = action.updatedBlog;\n            const blogsToSort = state.map(blog => blog.id === likedBlog.id ? likedBlog : blog);\n            return sortBlogs(blogsToSort);\n        }\n        case 'REMOVE':\n            return sortBlogs(action.data);\n        default:\n            return state;\n    }\n}\n\n\nexport const initializeState = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll();\n\n        dispatch({\n            type: 'INIT BLOGS',\n            data: blogs\n        });\n    }\n}\n\nexport const newBlog = (blogObject) => {\n    return async dispatch => {\n        const addedBlog = await blogService.create(blogObject);\n\n        dispatch({\n            type: 'NEW BLOG',\n            data: addedBlog\n        })\n    }\n}\n\nexport const likeBlog = (id) => {\n    return async dispatch => {\n        const allBlogs = await blogService.getAll();\n        const blogToLike = allBlogs.find(blog => blog.id === id);\n        const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1 };\n        const updatedBlog = await blogService.update(id, likedBlog);\n        //console.log(updatedBlog.id);\n\n        dispatch({\n            type: 'VOTE',\n            updatedBlog\n        })\n    }\n}\n\nexport const removeBlog = (id) => {\n    return async dispatch => {\n        await blogService.remove(id);\n        const allBlogs = await blogService.getAll();\n        const afterDeletion = allBlogs.filter(blogs => blogs.id !== id);\n\n        dispatch({\n            type: 'REMOVE',\n            data: afterDeletion\n        })\n    }\n}\n\nexport default blogReducer;\n\n//make functions in the app component so as to make sure that the notifications\n//are dispatched too","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\n//the action creator for the reducer\nimport { newBlog } from \"../reducers/blogReducer\";\nimport { showNotification } from \"../reducers/notificationReducer\";\n\n//the styles\nconst Wrapper = styled.div`\n\ttext-align: center;\n`;\nconst FormWrapper = styled.div`\n\tdisplay: ${(props) => (props.invisible ? \"none\" : \"\")};\n`;\n\nconst Input = styled.input`\n\tbackground: papayawhip;\n\tborder: none;\n\tborder-radius: 3px;\n\tcolor: palevioletred;\n\tmargin: 0.5em;\n\toutline: none;\n\tpadding: 0.5em;\n\ttext-align: center;\n`;\n\nconst VisibilityButton = styled.button`\n\tbackground-color: inherit;\n\tborder: 1px solid palevioletred;\n\tborder-radius: 3px;\n\tbox-shadow: 0 5px 15px -5px #00000070;\n\tcolor: palevioletred;\n\tfont-size: 1em;\n\tmargin: 1em 0px;\n\toutline: none;\n\tpadding: 0.25em 2em;\n\ttext-align: center;\n\ttransition: 0.2s linear;\n\n\t:hover {\n\t\t// background-color: red;\n\t\tborder: none;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\t//transform: scale(1.1);\n\t}\n`;\n\nconst SubmitButton = styled(VisibilityButton)`\n\t:hover {\n\t\t//background-color: palevioletred;\n\t\tborder: palevioletred;\n\t}\n`;\n\n//form component to create new blogs\nconst BlogForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [invisible, setinVisible] = useState(true);\n\n\t//event handler for toggling the visibility of the form\n\tconst toggleVisiblity = () => {\n\t\tsetinVisible(!invisible);\n\t};\n\n\tconst addBlog = (event) => {\n\t\tevent.preventDefault();\n\n\t\t//the data from the form\n\t\tconst title = event.target.title.value;\n\t\tevent.target.title.value = \"\";\n\t\tconst author = event.target.author.value;\n\t\tevent.target.author.value = \"\";\n\t\tconst url = event.target.url.value;\n\t\tevent.target.url.value = \"\";\n\n\t\tconst blogObject = {\n\t\t\ttitle,\n\t\t\tauthor,\n\t\t\turl,\n\t\t};\n\n\t\t//action creator for a new blog\n\t\tdispatch(newBlog(blogObject));\n\n\t\t//action creator for showing notifications\n\t\tdispatch(\n\t\t\tshowNotification(\n\t\t\t\t`a new blog -> ${blogObject.title} by ${blogObject.author} added`,\n\t\t\t\t5\n\t\t\t)\n\t\t);\n\t};\n\n\t//seee whether i can make the login form below hidden by dafult and\n\t// blur the outside and focus on the inside make it black | dark\n\t//come out shen i create new and also have a red Cancek button\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<FormWrapper invisible={invisible}>\n\t\t\t\t<h2>CreateNew</h2>\n\n\t\t\t\t<form onSubmit={addBlog}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* title <input type='text' name='title' value={newTitle} onChange={({ target }) => setNewTitle(target.value)} /> */}\n\t\t\t\t\t\t<Input placeholder=\"title\" type=\"text\" name=\"title\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* author <input id='author' type='text' name='author' value={newAuthor} onChange={({ target }) => setNewAuthor(target.value)} /> */}\n\t\t\t\t\t\t<Input placeholder=\"author\" type=\"text\" name=\"author\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{/* url <input type='text' name='url' value={newUrl} onChange={({ target }) => setNewUrl(target.value)} /> */}\n\t\t\t\t\t\t<Input placeholder=\"url\" type=\"text\" name=\"url\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<SubmitButton type=\"submit\"> save </SubmitButton>\n\t\t\t\t</form>\n\t\t\t</FormWrapper>\n\t\t\t<VisibilityButton type=\"button\" onClick={toggleVisiblity}>\n\t\t\t\t{\" \"}\n\t\t\t\t{invisible ? \"create new\" : \"cancel\"}{\" \"}\n\t\t\t</VisibilityButton>\n\t\t</Wrapper>\n\t);\n};\n\nexport default BlogForm;\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameLink = styled(Link)`\r\n\tcolor: black;\r\n\ttext-decoration: none;\r\n\ttransition: 0.2s linear;\r\n\r\n\t:hover {\r\n\t\tcursor: pointer;\r\n\t\tcolor: palevioletred;\r\n\t}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n\tbackground-color: inherit;\t\r\n\tborder: 1px solid palevioletred;\r\n\tcolor: palevioletred;\r\n\tmargin: 0px 30px;\r\n\toutline: none;\t\r\n\ttext-align: center;\r\n\ttransition: 0.2s linear;\r\n\twidth: 60px;\r\n\r\n\t:hover {\r\n\t\tcolor: papayawhip;\r\n\t\tcursor: pointer;\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n`;\r\n\r\nconst StyledRemove = styled(StyledButton)`\r\n\tbackground-color: inherit;\r\n\tborder: 1px solid red;\r\n\tbox-shadow: 0 5px 15px -5px #00000070;\r\n\tcolor: black;\r\n\t//height: 23px;\r\n\tmargin: 10px 0px 5px 0px;\r\n\r\n\t:hover {\r\n\t\tbackground-color: red;\r\n\t\tcolor:  papayawhip;\r\n\t}\r\n`;\r\n\r\n\r\nconst Blog = ({ blog, increaseLikesOf, handleRemOf }) => {\r\n\tconst [visible, setVisible] = useState(true);\r\n\r\n\tconst mainStyles = {\r\n\t\t\"border\": \".3px solid\",\r\n\t\t\"margin\": \"3px\",\r\n\t\t\"padding\": \"4px\"\r\n\t};\r\n\r\n\tconst hideByDefault = { \"display\": visible ? \"none\" : \"\" };\r\n\r\n\tconst toggleVisibility = () => {\r\n\t\tsetVisible(!visible);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={mainStyles} >\r\n\t\t\t<StyledNameLink to={`/blogs/${blog.id}`} >{blog.title} {blog.author}</StyledNameLink>\r\n\t\t\t<StyledButton onClick={toggleVisibility} className=\"viewButton\" > {visible ? \"view\" : \"hide\"} </StyledButton>\r\n\r\n\t\t\t<div style={hideByDefault} className='hidden-div' >\r\n\t\t\t\t{blog.url}\r\n\t\t\t\t<br />\r\n         likes: {blog.likes}\r\n\t\t\t\t<StyledButton onClick={increaseLikesOf} > like </StyledButton> {/*should you declare the brackets here or leave it*/}\r\n\t\t\t\t<br />\r\n\t\t\t\t{blog.author}\r\n\t\t\t\t<br />\r\n\t\t\t\t<StyledRemove onClick={handleRemOf}> remove </StyledRemove>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Blog;\r\n\r\n//the idea is to have the button hide the info in the second div when a button is pressed\r\n//the state will alway be set to true ie show\r\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Blog from './Blog';\nimport { likeBlog, removeBlog } from '../reducers/blogReducer';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div `\n// color: white;\n`\nconst StyledHeading = styled.h2`\n\tmargin: 20px 0px;\n\ttext-align: center;\n`;\n\n//component to display blogs if user logges in\n//Putting the action creators for removing and liking a blog here since it is higher than the Blog component\nconst DisplayBlogs = (props) => {\n    const blogs = useSelector(state => state.blogs);\n    const dispatch = useDispatch();\n\n    //event handler to remove a blog\n    const handleRemOf = (blog) => {\n\n        if (window.confirm(`remove blog ${blog.title} by ${blog.author}`)) { //if true then dispatch the action for removing a blog\n            dispatch(removeBlog(blog.id))\n        }\n    }\n\n    return (\n        <Wrapper >\n            <StyledHeading className='blog-title'>Blogs</StyledHeading>\n\n            {\n                blogs.map((blog) =>\n                    <Blog\n                        key={blog.id}\n                        blog={blog}\n                        increaseLikesOf={() => dispatch(likeBlog(blog.id))}\n                        handleRemOf={() => handleRemOf(blog)}\n                    />\n                )\n            }\n\n            {props.children}\n\n        </Wrapper>\n    );\n}\n\n\nexport default DisplayBlogs;\n\n//this component displays the user logged in and the logout button\n//\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// const Name = styled.span`\n// \ttext-align: center;\n// \twidth: 70px;\n// `;\n// const Blogs = styled.span`\n// \ttext-align: right;\n// `;\n\nconst StyledNameLink = styled(Link)`\n    color: black;\n\ttext-decoration: none;\n\ttransition: 0.2s linear;\n\n\t:hover {\n        cursor: pointer;\n        color: palevioletred;\n\t}\n`;\n\nconst Users = ({ users }) => {\n    //in order to get individual blogs of a user. see if I have toimplement this in the backend -> no\n    //create two components User -> blogs of indiv user and users for total no of blogs users have created\n\n\n    return (\n        <div>\n\n            <section style={{ padding: '10px 20px' }}>\n                <span> <StyledNameLink to={`/users/${users.id}`}> {users.name}  has created {users.blogs.length} blogs </StyledNameLink></span>\n                <hr style={{ 'borderColor': 'aqua' }} />\n            </section>\n\n        </div>\n    );\n}\n\nexport default Users;","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport Users from './Users';\n\n//this is the component that is going to list all the users that have created blogs\n\nconst StyledHeading = styled.h2`\n\tmargin: 20px 0px;\n\ttext-align: center;\n`;\n\nconst DisplayUsers = () => {\n    const users = useSelector(state => state.users);\n\n    if (users === null) {\n\n        return null;\n    }\n    return (\n        <div>\n            <StyledHeading>Users</StyledHeading>\n\n            {\n                users.map((user) =>\n                    <Users\n                        key={user.id}\n                        users={user}\n                    />\n                )\n            }\n\n        </div>\n    );\n}\n\nexport default DisplayUsers;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport '../styles/LoginForm.css';\n\n//component to display login\nconst LoginForm = ({ handleLogin, username, setUsername, password, setPassword }) => {\n\n\treturn (\n\t\t<div className=\"form-container\" >\n\t\t\t<form className='login-form' onSubmit={handleLogin}>\n\t\t\t<h2>LOGIN</h2>\n\t\t\t<div>\n\t\t\t\t<input placeholder=\"Username\" id=\"username\" type='text' name='username' value={username} onChange={({ target }) => setUsername(target.value)} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input placeholder=\"Password\" id=\"password\" type='password' name='password' value={password} onChange={({ target }) => setPassword(target.value)} />\n\t\t\t</div>\n\t\t\t<button type='submit' id=\"login-button\">login</button>\n\t\t</form>\n\t\t</div>\n\t);\n}\n\nLoginForm.propTypes = {\n\thandleLogin: propTypes.func.isRequired,\n\tusername: propTypes.string.isRequired,\n\tsetUsername: propTypes.func.isRequired,\n\tpassword: propTypes.string.isRequired,\n\tsetPassword: propTypes.func.isRequired\n}\n\nexport default LoginForm;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.nav`\n    background-color: black;\n    box-shadow: 0 5px 15px -5px #00000070;\n\tcolor: white;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 2vh 0px;\n    top: 0;\n\n    @media (max-width: 980px){\n        font-size: 18px;\n        display: flex;\n        flex-direction: column;\n        margin: auto;\n    }\n`;\nconst NavBar1 = styled.section`\n\tdisplay: flex;\n\tjustify-content: space-around;\n    padding: 5px 20px;\n`;\nconst NavBar2 = styled.section`\n\n\t@media  (max-width: 980px){\n        padding: 15px 0px;\n       text-align: center;\n    }\n`;\nconst StyledLink = styled(Link)`\n\ttext-decoration: none;\n    color: white;\n    margin-left: 30px;\n    padding: 0px 10px;\n    transition: .2s linear;\n    \n    :hover{\n        color: #3498db;\n    }\n`;\nconst LogOutButton = styled.button`\n    background-color: black;\n    border: 1px solid red;\n    box-shadow: 0 5px 15px -5px #00000070;\n    border-radius: 3px;\n    color: red;\n    height: 35px;\n\tmargin: 0px 34px 0px 20px;\n\t//outline: none;\n\tpadding: 0px 10px;\n    transition: 0.2s linear;\n    width: 70px;\n\n\t:hover {\n        background-color: red;\n\t\tcolor: #f1f1f1;\n        cursor: pointer;\n        transform: scale(1.1);\n    }\n\n    @media (max-width: 670px){\n        margin-top: 20px;\n    }\n`;\n\nconst Navigation = ({ user, handleLogout }) => {\n\n\n    return (\n        <div>\n            <Wrapper>\n                <NavBar1>\n                    <StyledLink to=\"/users\"> users</StyledLink>\n                    <StyledLink to=\"/blogs\">blogs</StyledLink>\n                </NavBar1>\n                <NavBar2>\n                    {`logged in as ${user.name}`}\n                    <LogOutButton onClick={handleLogout}>logout</LogOutButton>\n                </NavBar2>\n            </Wrapper>\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { useSelector } from 'react-redux';//to access the state of the notification reducer\n\nconst wrong_login_styles = {\n    \"border\": \"3px solid red\",\n    \"border-radius\": \"3px\",\n    \"color\": \"red\",\n    \"font-size\": \"20px\",\n    \"margin-top\": \"10px\",\n    \"padding\": \"10px\",\n    \"text-align\": \"center\"\n}\n\nconst blog_addition_styles = {\n    \"border\": \"3px solid green\",\n    \"border-radius\": \"3px\",\n    \"color\": \"green\",\n    \"font-size\": \"20px\",\n    \"margin-top\": \"10px\",\n    \"padding\": \"10px\",\n    \"text-align\": \"center\"\n}\n\nconst Notification = () => {\n    const notification = useSelector(state => state.notification);\n\n    if (notification === null) {\n        return null\n    } else if (notification === \"wrong username or password\") {\n        return (\n            <div className='error' style={wrong_login_styles}>\n                {notification}\n            </div>\n        )\n    } else if (notification.includes(\"a new blog\")) {\n        return (\n            <div style={blog_addition_styles}>\n                {notification}\n            </div>\n        )\n    } else if (notification.includes(\"could not connect to the server\")) {\n        return (\n            <div className='error' style={wrong_login_styles} >\n                {notification}\n            </div>\n        );\n    }\n}\n\nexport default Notification;\n\n//use the useState func to access the state in the redux store for the app","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { likeBlog } from '../reducers/blogReducer';\n\nconst Wrapper = styled.div`\n\tborder: 0.3px solid;\n\tline-height: 30px;\n\tmargin: 3px;\n\tpadding: 4px;\n`;\nconst StyledHeading = styled.h2`\n\tmargin: 20px 0px;\n\tpadding: 0px 0px 0px 30px;\n`;\nconst StyledLink = styled.a`\n\tcolor: papayawhip;\n\tpadding: 0px 0px 0px 30px;\n\ttext-decoration: none;\n\n\t:hover {\n\t\tcursor: pointer;\n\t\tcolor: palevioletred;\n\t}\n`;\nconst StyledParagraph = styled.p`\n\tpadding: 0px 0px 0px 30px;\n`;\n\nconst StyledButton = styled.button`\n    background-color: papayawhip;\n    border: none;\n    height: 25px;\n    margin: 0px 20px;\n\toutline: none;    \n    transition: .2s linear;\n    width: 60px;\n\n\t:hover{\n\t\tcolor: palevioletred;\n\t\tcursor: pointer;\n\t\ttransform: scale(1.1);\n\t}\n`;\n\nconst SingleBlog = () => {\n    const blogs = useSelector(state => state.blogs);\n    const dispatch = useDispatch();\n\n    const match = useRouteMatch('/blogs/:id');\n\n    const singleBlog = match\n        ? blogs.find((blog) => blog.id === match.params.id)\n        : null;\n\n    console.log('here is what the single blog contains...', singleBlog);\n\n    //event handler for liking a blog\n    const increaseLikeOf = (id) => {\n        dispatch(likeBlog(id));\n    }\n\n    //when the state is still null/an empty array\n    if (!singleBlog) {\n        return null;\n    }\n\n    return (\n        <Wrapper>\n            <StyledHeading>{singleBlog.title}</StyledHeading>\n            <StyledLink title={`visit blog ${singleBlog.title}`} href={`${singleBlog.url}`}> {singleBlog.url}</StyledLink>\n            <StyledParagraph>likes {singleBlog.likes} <StyledButton onClick={() => increaseLikeOf(singleBlog.id)} > like </StyledButton> </StyledParagraph>\n            <StyledParagraph>added by {singleBlog.user ? singleBlog.user.name : 'N/A'}</StyledParagraph>\n        </Wrapper>\n    );\n\n}\n\nexport default SingleBlog;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nconst StyledHeading = styled.h2`\ntext-align: center;\npadding: 10px 16px;\n`\nconst StyledList = styled.li`\nlist-style-type: none;\npadding: 10px 0px;\n`\n//to list all the blogs that a user has made\n\n\nconst User = () => {\n    const users = useSelector(state => state.users);\n\n    const match = useRouteMatch('/users/:id');\n\n    const singleUser = match\n        ? users.find((user) => user.id === match.params.id)\n        : null;\n\n    if (!singleUser) {\n        return null;\n    }\n    return (\n        <div>\n            <StyledHeading>{singleUser.name}</StyledHeading>\n\n            {\n                singleUser.blogs.map((blog) =>\n                    <ul key={blog.id} style={{ textAlign: 'center' }}>\n                        <StyledList > {blog.title}  </StyledList>\n                        <hr />\n                    </ul>\n                )\n            }\n        </div>\n    );\n}\n\nexport default User;","//import loginService from '../services/login';\n\n//Store the information about the signed in user in the Redux store.\n\nconst userReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'INIT USER':\n            return action.data;\n        default:\n            return state;\n    }\n}\n\n//the action creator for storing the user go in here\n//guess that the user will have to log in here and the data returned will be user\n// Should I move the entire login function here?\n\nexport const loggedUser = (user) => {\n    return {\n        type: 'INIT USER',\n        data: user\n    }\n}\n\nexport default userReducer;","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst getUsers = async () => {\n    const response = await axios.get(baseUrl);\n\n    return response.data;\n}\n\nexport default { getUsers };","import userService from '../services/users';\n\nconst usersReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ALL USERS':\n            return action.data;\n        case 'NEW USER':\n            return [...state, action.data];\n        default:\n            return state;\n    }\n}\n\nexport const allUsers = () => {\n    return async dispatch => {\n        const users = await userService.getUsers();\n\n        const unique_users = users; /*[... new Set(users.name)];*/\n\n        dispatch({\n            type: 'ALL USERS',\n            data: unique_users\n        })\n    }\n}\n\nexport default usersReducer;","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport BlogForm from './components/BlogForm';\nimport DisplayBlogs from './components/DisplayBlogs';\nimport DisplayUsers from './components/DisplayUsers';\nimport LoginForm from './components/LoginForm';\nimport Navigation from './components/Navigation';\nimport Notification from './components/Notification';\nimport SingleBlog from './components/SingleBlog';\nimport SingleUser from './components/SingleUser';\nimport { showNotification } from './reducers/notificationReducer'; //action creator for notifications\nimport { initializeState } from './reducers/blogReducer';\nimport { loggedUser } from './reducers/userReducer';\nimport { allUsers } from './reducers/usersReducer';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './styles/App.css';\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\tconst user = useSelector(state => state.user);\n\n\t//the states for the login form\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\t//initializing the state for the blogs\n\tuseEffect(() => {\n\t\tdispatch(initializeState());\n\t}, [dispatch]);\n\n\t//getting all users\n\tuseEffect(() => {\n\t\tdispatch(allUsers());\n\t}, []);\n\n\n\t//the useEffect function below ensures that we do not have to log back in every time we refresh the page\n\t//it sets the value of the user in the redux user reducer\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON);\n\t\t\tdispatch(loggedUser(user));\n\t\t\tblogService.setToken(user.token);\n\t\t}\n\t}, [dispatch]); //incase of any problem with useEffect here remove the dispatch\n\n\t//the event hanlder for logging in\n\tconst handleLogin = async (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(\"logging in with\", username, password);\n\n\t\ttry {\n\t\t\tconst user = await loginService.login(\n\t\t\t\t{ username, password }\n\t\t\t);\n\n\t\t\twindow.localStorage.setItem(\n\t\t\t\t'loggedBlogAppUser', JSON.stringify(user)\n\t\t\t);\n\n\t\t\tsetUsername(\"\");\n\t\t\tsetPassword(\"\");\n\n\t\t\tdispatch(loggedUser(user));\n\n\t\t} catch (exception) {\n\t\t\tconsole.log(\"the exception when logging in ...\", exception.name, exception.message);\n\n\t\t\t//before dispatching a notification make sure to add it in the Notification component\n\t\t\tif (exception.message.includes(\"Request failed with status code 401\")) {\n\t\t\t\tdispatch(showNotification(\"wrong username or password\", 5));\n\t\t\t}\n\t\t\tif (exception.message.includes(\"Request failed with status code 500\")) {\n\t\t\t\tdispatch(showNotification(\"could not connect to the server\", 8));\n\t\t\t}\n\t\t}\n\t}\n\n\t//event hanlder to be fired when user logs out\n\tconst handleLogout = async () => {\n\n\t\ttry {\n\t\t\twindow.localStorage.clear();\n\t\t\twindow.location.reload();\n\t\t} catch (exception) {\n\t\t\tconsole.log(\"the logout exception is...\", exception);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='app-container'>\n\n\t\t\t<Notification />\n\n\t\t\t{/* the navigation for the app. Must make sure that the user is not null. Something that react really hates */}\n\t\t\t{\n\t\t\t\tuser !== null\n\t\t\t\t\t?\n\t\t\t\t\t<Navigation user={user} handleLogout={handleLogout} />\n\t\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\n\t\t\t{/* it time to get rid of conditional rendering and use react router */}\n\t\t\t{user === null\n\t\t\t\t?\n\t\t\t\t<LoginForm handleLogin={handleLogin}\n\t\t\t\t\tusername={username}\n\t\t\t\t\tsetUsername={setUsername}\n\t\t\t\t\tpassword={password}\n\t\t\t\t\tsetPassword={setPassword} />\n\t\t\t\t:\n\t\t\t\t// easter egg saying -> so your are developer too.\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/users/:id'>\n\t\t\t\t\t\t<SingleUser />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/users'>\n\t\t\t\t\t\t<DisplayUsers />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/blogs/:id'>\n\t\t\t\t\t\t<SingleBlog />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/'>\n\t\t\t\t\t\t<DisplayBlogs >\n\t\t\t\t\t\t\t{/* <Togglable buttonLabel={'new blog'}>\n\t\t\t\t\t\t\t\t<BlogForm />\n\t\t\t\t\t\t\t</Togglable> */}\n\t\t\t\t\t\t\t<BlogForm />\n\t\t\t\t\t\t</DisplayBlogs>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport blogReducer from './reducers/blogReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport userReducer from './reducers/userReducer';\nimport usersReducer from './reducers/usersReducer';\n\nconst reducer = combineReducers({\n    blogs: blogReducer,\n    notification: notificationReducer,\n    user: userReducer,\n    users: usersReducer\n});\n\nconst store = createStore(\n    reducer, composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);\n\nexport default store;\n\n\n//the store for the blog listing apps state. Should it have been in the src directory;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\nimport './styles/index.css';\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>,\n    document.getElementById('root')\n)"],"sourceRoot":""}